<UserControl x:Class="EventManagementSystemUI.Views.NewEvent"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
          xmlns:vm="clr-namespace:EventManagementSystemUI.ViewModels" d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
             mc:Ignorable="d"
          d:DesignHeight="450" d:DesignWidth="800">

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Header -->
        <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="Create New Event" FontSize="24" FontWeight="Bold" 
                Foreground="{DynamicResource MaterialDesignBody}" Margin="0,0,0,20" 
                HorizontalAlignment="Center"/>
        <!-- Fix: Replaced 'ElevationAssist.Elevation' with 'ShadowAssist.ShadowDepth' as 'Elevation' is not valid for TextBlock. -->

        <!-- Title -->
        <TextBlock Grid.Row="1" Text="Title:" VerticalAlignment="Center" Margin="5" FontSize="14"/>
        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Padding="5" 
              Text="{Binding EventTitle, UpdateSourceTrigger=PropertyChanged}" 
              Style="{DynamicResource MaterialDesignOutlinedTextBox}" 
              materialDesign:HintAssist.Hint="Enter event title" 
              materialDesign:HintAssist.IsFloating="True"/>

        <!-- Description -->
        <TextBlock Grid.Row="2" Text="Description:" VerticalAlignment="Center" Margin="5" FontSize="14"/>
        <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Padding="5" 
              Text="{Binding EventDescription, UpdateSourceTrigger=PropertyChanged}" 
              Height="100" AcceptsReturn="True" TextWrapping="Wrap" 
              Style="{DynamicResource MaterialDesignOutlinedTextBox}" 
              materialDesign:HintAssist.Hint="Enter event description" 
              materialDesign:HintAssist.IsFloating="True"/>

        <!-- Start Date -->
        <TextBlock Grid.Row="3" Text="Start Date:" VerticalAlignment="Center" Margin="5" FontSize="14"/>
        <xctk:DateTimePicker Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Padding="5" 
                     Value="{Binding EventStartDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Format="Custom" FormatString="yyyy-MM-dd HH:mm"  />
        <!-- End Date -->
        <TextBlock Grid.Row="4" Text="End Date:" VerticalAlignment="Center" Margin="5" FontSize="14"/>
        <xctk:DateTimePicker Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Padding="5"
             Value="{Binding EventEndDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
             Format="Custom" FormatString="yyyy-MM-dd HH:mm"  />

        <!-- Location -->
        <TextBlock Grid.Row="5" Text="Location:" VerticalAlignment="Center" Margin="5" FontSize="14"/>
        <TextBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Padding="5" 
                 Text="{Binding EventLocation, UpdateSourceTrigger=PropertyChanged}" 
                 Style="{DynamicResource MaterialDesignOutlinedTextBox}" 
                 materialDesign:HintAssist.Hint="Enter event location" 
                 materialDesign:HintAssist.IsFloating="True"/>
        <ListBox Grid.Row="6"
         x:Name="GroupsListBox"
         ItemsSource="{Binding Groups}"
         SelectionMode="Multiple"
         Margin="5"
         Height="150"
         FontSize="14"
         ScrollViewer.VerticalScrollBarVisibility="Auto"
         BorderBrush="#CCC"
         BorderThickness="1">

            <!-- Item layout -->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="#DDD"
                    BorderThickness="0 0 0 1"
                    Padding="6"
                    Background="White">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding Name}" 
                               FontWeight="SemiBold" 
                               VerticalAlignment="Center" />

                            <TextBlock Text="{Binding Id}" 
                               Foreground="Gray" 
                               FontSize="12" 
                               Margin="10 0 0 0"
                               Grid.Column="1" 
                               VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <!-- Optional styling for selection feedback -->
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#D0EBFF" />
                            <Setter Property="BorderBrush" Value="#4DA3FF" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <!-- Buttons -->
        <StackPanel Grid.Row="7" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
            <Button Content="Submit" Margin="5" Padding="15,5" Style="{DynamicResource MaterialDesignRaisedButton}"
                    Background="#FF4CAF50" Foreground="White" Command="{Binding SubmitNewEventCommand}"
                    >
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                To="#FF66BB6A" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Button.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                To="#FF4CAF50" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
            <Button Content="Cancel" Margin="5" Padding="15,5" Style="{DynamicResource MaterialDesignRaisedButton}"
                    Background="#FF607D8B" Foreground="White" Command="{Binding CancelNewEventCommand}"
                    >
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                To="#FF78909C" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Button.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                To="#FF607D8B" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
        </StackPanel>

    </Grid>
</UserControl>